2. 	OOP คืออะไร
	ตอบ 	เป็นรูปแบบการเขียน code ที่มองให้ code เป็น object แทน ซึ่งใน class และ object จะระบุ attributes และ method ไว้ ช่วยทำให้พัฒนาซอฟแวร์ที่มีความซับซ้อนได้ง่ายขึ้น
	           ประกอบด้วย 4 หลักการสำคัญ 
	          1.	Encapsulation เป็นการซ่อนรายละเอียดข้อมูล กำหนดระดับการเข้าถึงได้ ลดข้อผิดพลาดในการทำงาน
	          2.	Abstraction เป็นการแสดง attributes หรือ method ของ object เท่าที่จำเป็น 
	          3.	Inheritance เป็นการนำ Attributes หรือ Method จากคลาสแม่ไปใช้ในคลาสลูกและสามารถเพิ่มเติมความสามารถอื่นๆ เข้าไปได้
	          4.	Polymorphism คือ Object จาก Class เดียวกันแต่ผลลัพธ์ที่ได้จาก Method ต่างกัน

3.	Automation Testing คืออะไร
	ตอบ	คือการทดสอบการทำงานโดยอัตโนมัติ ซอฟแวร์ที่มีคุณสมบัติและฟังก์ชั่นมาก หากเพิ่มฟีเจอร์ใหม่เข้าไปต้องทดสอบการทำงานเดิมด้วยว่ามีข้อผิดพลาดหรือไม่ เหมือน
		การทำการทดสอบซ้ำ Automation Testing จึงช่วยลดระยะเวลา งบประมาณ และข้อผิดพลาดที่อาจเกิดขึ้นโดยมนุษย์ได้มาก

4.	BlockChain คืออะไร
	ตอบ	คือเทคโนโลยีจัดเก็บข้อมูลที่มีโครงสร้างแบบกระจายศูนย์ไปยัง Node ต่างๆ ไม่มีเครื่องแม่ข่าย ( Distributed Ledger Technology : DLT ) โดยทุก Node จะต้องมีสำเนาข้อมูล
		และการบันทึกข้อมูลใน Block ตรงกันถึงจะสามารถแก้ใขและอัปเดตฐานข้อมูลได้

5.	Frontend Framework ที่ชอบที่สุด คืออะไร เพราะอะไร
	ตอบ	ไม่มี เนื่องจากยังไม่เคยใช้ framework ใดๆ แต่ framework ที่สนใจคือ bootstrap และ angular
		-	bootstrap เพราะ เป็นการต่อยอดจากพื้นฐานที่ได้เรียนรู้คือ html และ css
		-	angular เพราะ คิดว่าน่าจะเหมาะสมกับการพัฒนาโปรเจคที่มีความซับซ้อนมากขึ้น code สามารถนำกลับมาใช้ใหม่ได้ อ่านง่ายขึ้น

6.	Backend Framework ที่ชอบที่สุด คืออะไร เพราะอะไร
	ตอบ	Nest.js 
		-	เนื่องจาก Nest.js Framework ง่ายต่อการแยกสัดส่วนในการพัฒนาระบบ โดยการแยกเป็น Modules หลักและ  Modules ย่อยต่าง ๆ  ภายในประกอบด้วยการทำงาน
			เชื่อมต่อกันของ Services, Providers, Controllers 
		-	ใช้ Typescript เป็นหลักทำให้รู้ข้อผิดพลาดต่างๆ ตั้งแต่ตอน Compile
		-	 Typescript มีลักษณะเป็น static typed ทำให้มีความผิดพลาดของข้อมูลน้อย

7.	Big O คืออะไร
	ตอบ	คือระยะเวลาหรือทรัพยากรในการประมวลผลที่มากที่สุด แย่ที่สุด ที่ใช้ในการรัน code ชุดหนึ่ง